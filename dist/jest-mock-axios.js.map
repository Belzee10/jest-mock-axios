{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d6cc681a32b7db8780f3","webpack:///./lib/jest-mock-axios.ts","webpack:///./node_modules/jest-mock-promise/dist/jest-mock-promise.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;qjBCvDG;;;;;;;;;AAiBH;;;;;;;;;AAAA;;;AAEwC;AAC9B,aAAgB,mBAAyB;AAEzB;AACjB,aAAG,MAAa,KAAG,GAAK,KAAO,OAAK,KAAO;AAC3C,aAAI,OAAa,KAAG,GAAK,KAAO,OAAK,KAAO;AAC5C,aAAG,MAAa,KAAG,GAAK,KAAO,OAAK,KAAO;AAC3C,aAAM,SAAa,KAAG,GAAK,KAAO,OAAK,KA8EhD;AAAC;;;;;AA3EG,gBAAW,UAAoB;AAC3B,iBAAiB,iBAAK,KAAU;AAC9B,mBACR;AAAC;AAMiB;;;;;;;mCAAqB;AAEnC,gBAAS,SAAE;AAC6B;AACpC,qBAAiB,iBAAO,OAAK,KAAiB,iBAAQ,QAAS,UACrE;AAAM,mBAAE;AACoB;AACnB,0BAAO,KAAiB,iBACjC;AAAC;AAEK,mBACR;AAAC;AAOkB;;;;;;;;qCAAuB;gBAAE,8EAAwB;;AAElC;AACzB,sBAAO,KAAW,WAAU;AAEU;AACrC,8BAAgB;AAClB,sBAAI;AACF,wBAAK;AACD,4BAAM;AACT,yBAAI;AACL,wBACP;AANwB,aAAR,EAMJ;AAEwC;AAC9C,oBAAQ,QACjB;AAAC;AAMe;;;;;;;;gBAAC,4EAAY;gBAAE,8EAAwB;;AACrB;AACzB,sBAAO,KAAW,WAAU;AACkB;AAC9C,oBAAO,OAAO,OAAO,OAAG,IACjC;AAAC;AAKgB;;;;;;;AACT,mBAAK,KAAiB,iBAAK,KAAiB,iBAAO,SAC3D;AAAC;AAKW;;;;;;;AACN,iBAAiB,iBAAO,OAAE,GAAM,KAAiB,iBAAS;AAE4B;AACtF,iBAAI,IAAa;AACjB,iBAAK,KAAa;AAClB,iBAAI,IAAa;AACjB,iBAAO,OACb;AACD;;;;;;AAAC;AAGF;kBAAe,IAAgB,Y;;;;;;ACjH/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;;AAEA,OAAO;AACP;AACA,CAAC;AACD,6C","file":"jest-mock-axios.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jest-mock-axios\"] = factory();\n\telse\n\t\troot[\"jest-mock-axios\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d6cc681a32b7db8780f3","/**\r\n * TypeScript version of Axios mock for unoit testing with [Jest](https://facebook.github.io/jest/).\r\n * This file is based on https://gist.github.com/tux4/36006a1859323f779ab0\r\n * \r\n * @author   knee-cola <nikola.derezic@gmail.com>\r\n * @license  @license MIT License, http://www.opensource.org/licenses/MIT\r\n */\r\n\r\nimport SyncPromise from 'jest-mock-promise';\r\n\r\ntype HttpResponse = {\r\n  data:object,\r\n  status?:number,\r\n  statusText?:string,\r\n  headers?:object,\r\n  config?:object,\r\n}\r\n\r\ntype AnyFunction = (...args:any[]) => any;\r\n\r\n// spy is a function which extends an object (it has static methods and properties)\r\ntype SpyFn = AnyFunction & { mockClear:AnyFunction };\r\n\r\nclass AxiosMock {\r\n\r\n  /** a FIFO queue of pending request */\r\n  private pending_promises:Array<SyncPromise> = [];\r\n\r\n  // mocking Axios methods\r\n  public get:SpyFn = jest.fn(this.newReq.bind(this))\r\n  public post:SpyFn = jest.fn(this.newReq.bind(this))\r\n  public put:SpyFn = jest.fn(this.newReq.bind(this))\r\n  public delete:SpyFn = jest.fn(this.newReq.bind(this))\r\n\r\n  private newReq():any {\r\n    let promise = new SyncPromise()\r\n    this.pending_promises.push(promise);\r\n    return(promise);\r\n  }\r\n\r\n  /**\r\n   * Removes the give promise from the queue\r\n   * @param promise \r\n   */\r\n  private popPromise(promise?:SyncPromise) {\r\n\r\n    if(promise) {\r\n      // remove the promise from pending queue\r\n      this.pending_promises.splice(this.pending_promises.indexOf(promise),1)\r\n    } else {\r\n      // take the oldest promise\r\n      promise = this.pending_promises.shift();\r\n    }\r\n\r\n    return(promise);\r\n  }\r\n\r\n  /**\r\n   * Simulate a server response, (optionally) with the given data\r\n   * @param response (optional) response returned by the server\r\n   * @param promise (optional) request promise for which response should be resolved\r\n   */\r\n  public mockResponse(response?:HttpResponse, promise:SyncPromise=null):void {\r\n    \r\n    // remove promise from the queue\r\n    promise = this.popPromise(promise);\r\n  \r\n    // replacing missing data with default values\r\n    response = Object.assign({\r\n      data: {},\r\n      status: 200,\r\n      statusText: 'OK',\r\n      headers: {},\r\n      config: {},\r\n    }, response);\r\n  \r\n    // resolving the Promise with the given response data\r\n    promise.resolve(response);\r\n  }\r\n\r\n  /**\r\n   * Simulate an error in server request\r\n   * @param error (optional) error object\r\n   */\r\n  public mockError(error:any={}, promise:SyncPromise=null):void {\r\n    // remove promise from the queue\r\n    promise = this.popPromise(promise);\r\n    // resolving the Promise with the given response data\r\n    promise.reject(Object.assign({}, error));\r\n  }\r\n\r\n  /**\r\n   * Returns promise of the most recent request\r\n   */\r\n  public lastReqGet():SyncPromise {\r\n    return(this.pending_promises[this.pending_promises.length-1]);\r\n  }\r\n\r\n  /**\r\n   * Clears all of the queued requests\r\n   */\r\n  public reset() {\r\n    this.pending_promises.splice(0, this.pending_promises.length);\r\n\r\n    // resets all information stored in the mockFn.mock.calls and mockFn.mock.instances arrays\r\n    this.get.mockClear();\r\n    this.post.mockClear();\r\n    this.put.mockClear();\r\n    this.delete.mockClear();\r\n  }\r\n};\r\n\r\n// this is a singletone object\r\nexport default new AxiosMock();\n\n\n// WEBPACK FOOTER //\n// ./lib/jest-mock-axios.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jest-mock-promise\"] = factory();\n\telse\n\t\troot[\"jest-mock-promise\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Synchronous Promise, which gets settled (resolved or settled) in a synchronous manner.\r\n *\r\n * `JestMockPromise` was written to simplify unit testing mocking (i.e. in [Jest](https://facebook.github.io/jest/) )\r\n *\r\n * In order to simplify synchronious promise settling two additional methods\r\n * were added to the promise instance:\r\n *   - `resolve` = forces the given promise to be resolved right away\r\n *   - `reject` = forces the given promise to be rejected right away\r\n *\r\n * By using these methods, we can write something like (provided that the Promise is mocked):\r\n *\r\n *    let promise = ExternalComponent.doAyncWork();\r\n *    promise.resolve({ label: 'this is some mock data' });\r\n *\r\n * @author   knee-cola<nikola.derezic@gmail.com>\r\n * @license  @license MIT License, http://www.opensource.org/licenses/MIT\r\n *\r\n */\nvar PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"pending\"] = 0] = \"pending\";\n    PromiseState[PromiseState[\"resolved\"] = 1] = \"resolved\";\n    PromiseState[PromiseState[\"rejected\"] = 2] = \"rejected\";\n})(PromiseState || (PromiseState = {}));\n\nvar JestMockPromise = function () {\n    function JestMockPromise(callbackFn) {\n        _classCallCheck(this, JestMockPromise);\n\n        this.handlers = [];\n        this.handlerIx = 0;\n        this.state = PromiseState.pending;\n        // if given, calling the given function\n        if (callbackFn) {\n            callbackFn(this.resolveFn.bind(this), this.rejectFn.bind(this));\n        }\n    }\n    /**\r\n     * Resolves the given promise\r\n     * @param data data which should be passed to `then` handler functions\r\n     */\n\n\n    _createClass(JestMockPromise, [{\n        key: \"resolveFn\",\n        value: function resolveFn(data) {\n            this.data = data;\n            this.state = PromiseState.resolved;\n            this.err = void 0;\n            for (var maxIx = this.handlers.length; this.handlerIx < maxIx; this.handlerIx++) {\n                var el = this.handlers[this.handlerIx];\n                var returnedValue;\n                // stop the execution at first `catch` handler you run into\n                if (el.catch) {\n                    break;\n                }\n                try {\n                    // calling a `then` handler\n                    returnedValue = el.then(this.data);\n                } catch (ex) {\n                    // in case `then` handler throws an error\n                    // > pass it down to a first `catch` handler\n                    this.handlerIx++;\n                    this.rejectFn(ex);\n                }\n                if (returnedValue !== void 0) {\n                    // IF handler returned a value\n                    // > use it as the `data` for all the handlers which will be called next\n                    this.data = returnedValue;\n                }\n            }\n            ;\n        }\n    }, {\n        key: \"rejectFn\",\n\n        /**\r\n         * Rejects the given promise\r\n         * @param err error object which is to be passed as a param to `catch` function\r\n         */\n        value: function rejectFn(err) {\n            this.state = PromiseState.rejected;\n            this.err = err;\n            // find the first `catch` handler and call it\n            for (var maxIx = this.handlers.length; this.handlerIx < maxIx; this.handlerIx++) {\n                var el = this.handlers[this.handlerIx],\n                    returnedValue;\n                if (el.catch) {\n                    returnedValue = el.catch(err);\n                    // try executing `then` handlers which follow\n                    this.handlerIx++;\n                    this.resolveFn(returnedValue);\n                    // stop the execution as soon as you run into a first catch element\n                    break;\n                }\n            }\n            ;\n        }\n        /**\r\n         * Appends fulfillment and rejection handlers to the promise,\r\n         * and returns a new promise resolving to the return value of\r\n         * the called handler, or to its original settled value if the\r\n         * promise was not handled (i.e. if the relevant handler\r\n         * onFulfilled or onRejected is not a function).\r\n         * @param onFulfilled fulfillment handler function\r\n         * @param onRejected rejection handler function\r\n         */\n\n    }, {\n        key: \"then\",\n        value: function then(onFulfilled, onRejected) {\n            // if the promise is already settled (resolved or rejected)\n            // > call the apropriate handler\n            switch (this.state) {\n                case PromiseState.rejected:\n                    if (onRejected) {\n                        onRejected(this.err);\n                    }\n                    break;\n                case PromiseState.resolved:\n                    onFulfilled(this.data);\n                    break;\n                default:\n                    this.handlers.push({ then: onFulfilled });\n                    if (onRejected) {\n                        this.handlers.push({ catch: onRejected });\n                    }\n            }\n            return this;\n        }\n        /**\r\n         * Appends a rejection handler callback to the promise,\r\n         * and returns a new promise resolving to the return\r\n         * value of the callback if it is called, or to its\r\n         * original fulfillment value if the promise is instead\r\n         * fulfilled.\r\n         * @param onRejected rejection handler function\r\n         */\n\n    }, {\n        key: \"catch\",\n        value: function _catch(onRejected) {\n            // if the promise is already rejected\n            // > call the handler right away\n            if (this.state === PromiseState.resolved) {\n                onRejected(this.err);\n            } else {\n                this.handlers.push({ catch: onRejected });\n            }\n            return this;\n        }\n        /**\r\n         * Resolves the promise with the given promise data.\r\n         * This is a non-standard method, which should be the last\r\n         * one to be called, after all the fulfillment and rejection\r\n         * handlers have been registered.\r\n         * @param {*} data\r\n         */\n\n    }, {\n        key: \"resolve\",\n        value: function resolve(data) {\n            this.resolveFn(data);\n        }\n        /**\r\n         * Rejects the promise with the given promise with the given error object.\r\n         * This is a non-standard method, which should be the last\r\n         * one to be called, after all the fulfillment and rejection\r\n         * handlers have been registered.\r\n         * @param {*} data\r\n         */\n\n    }, {\n        key: \"reject\",\n        value: function reject(err) {\n            this.rejectFn(err);\n        }\n        /**\r\n         * Creates a resolved promise with the given data\r\n         * @param data data which should be passed to `then` handler functions\r\n         */\n\n    }], [{\n        key: \"resolve\",\n        value: function resolve(data) {\n            console.warn('a promise created via `JestMockPromise.resolve` will be executed async ... for sync execution call `resolve` method on an instance of `Promise`');\n            return new JestMockPromise(function (resolve, reject) {\n                setTimeout(resolve(data), 0);\n            });\n        }\n        /**\r\n         * Creates a rejected promise with the given data\r\n         * @param err error object which is to be passed as a param to `catch` function\r\n         */\n\n    }, {\n        key: \"reject\",\n        value: function reject(err) {\n            console.warn('a promise created via `JestMockPromise.reject` will be executed async ... for sync execution call `reject` method on an instance of `Promise`');\n            return new JestMockPromise(function (resolve, reject) {\n                setTimeout(reject(err), 0);\n            });\n        }\n    }]);\n\n    return JestMockPromise;\n}();\n\nexports.default = JestMockPromise;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=jest-mock-promise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jest-mock-promise/dist/jest-mock-promise.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}