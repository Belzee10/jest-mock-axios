{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 07cd80059343c3a5883c","webpack:///./lib/index.ts","webpack:///./lib/mock-axios.ts","webpack:///external \"jest-mock-promise\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;AACA;;;;;;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB;AACvB,sBAAsB;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvFA,+C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jest-mock-promise\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jest-mock-promise\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jest-mock-axios\"] = factory(require(\"jest-mock-promise\"));\n\telse\n\t\troot[\"jest-mock-axios\"] = factory(root[\"jest-mock-promise\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07cd80059343c3a5883c","import JestMockAxios from './mock-axios';\nexport default new JestMockAxios();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/index.ts\n// module id = 0\n// module chunks = 0","/**\n * TypeScript version of Axios mock for unoit testing with [Jest](https://facebook.github.io/jest/).\n * This file is based on https://gist.github.com/tux4/36006a1859323f779ab0\n *\n * @author   knee-cola <nikola.derezic@gmail.com>\n * @license  @license MIT License, http://www.opensource.org/licenses/MIT\n */\nimport SyncPromise from 'jest-mock-promise';\nclass MockAxios {\n    constructor() {\n        /** a FIFO queue of pending request */\n        this.pending_promises = [];\n        // mocking Axios methods\n        this.get = jest.fn(this.newReq.bind(this));\n        this.post = jest.fn(this.newReq.bind(this));\n        this.put = jest.fn(this.newReq.bind(this));\n        this.delete = jest.fn(this.newReq.bind(this));\n    }\n    newReq() {\n        let promise = new SyncPromise();\n        this.pending_promises.push(promise);\n        return (promise);\n    }\n    /**\n     * Removes the give promise from the queue\n     * @param promise\n     */\n    popPromise(promise) {\n        if (promise) {\n            // remove the promise from pending queue\n            this.pending_promises.splice(this.pending_promises.indexOf(promise), 1);\n        }\n        else {\n            // take the oldest promise\n            promise = this.pending_promises.shift();\n        }\n        return (promise);\n    }\n    /**\n     * Simulate a server response, (optionally) with the given data\n     * @param response (optional) response returned by the server\n     * @param promise (optional) request promise for which response should be resolved\n     */\n    mockResponse(response, promise = null) {\n        // remove promise from the queue\n        promise = this.popPromise(promise);\n        // replacing missing data with default values\n        response = Object.assign({\n            data: {},\n            status: 200,\n            statusText: 'OK',\n            headers: {},\n            config: {},\n        }, response);\n        // resolving the Promise with the given response data\n        promise.resolve(response);\n    }\n    /**\n     * Simulate an error in server request\n     * @param error (optional) error object\n     */\n    mockError(error = {}, promise = null) {\n        // remove promise from the queue\n        promise = this.popPromise(promise);\n        // resolving the Promise with the given response data\n        promise.reject(Object.assign({}, error));\n    }\n    /**\n     * Returns promise of the most recent request\n     */\n    lastReqGet() {\n        return (this.pending_promises[this.pending_promises.length - 1]);\n    }\n    /**\n     * Clears all of the queued requests\n     */\n    reset() {\n        this.pending_promises.splice(0, this.pending_promises.length);\n        // resets all information stored in the mockFn.mock.calls and mockFn.mock.instances arrays\n        this.get.mockClear();\n        this.post.mockClear();\n        this.put.mockClear();\n        this.delete.mockClear();\n    }\n}\n;\n// this is a singletone object\nexport default MockAxios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mock-axios.ts\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jest-mock-promise\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}